[workspace]
members = ["classfile", "java_runtime", "jvm", "jvm_rust"]

[workspace.package]
version = "0.0.1"
edition = "2021"
license = "MIT"

[workspace.dependencies]
anyhow = { version = "^1.0", default-features = false }
async-recursion = { version = "^1.0", default-features = false }
async-trait = { version = "^0.1", default-features = false }
bytemuck = { version = "^1.18", default-features = false, features = ["extern_crate_alloc"] }
dyn-clone = { version = "^1.0", default-features = false }
nom = { version = "^7.1", default-features = false, features = ["alloc"] }
async-lock = { version = "^3.3", default-features = false }
tracing = { version = "^0.1", default-features = false, features = ["attributes"] }

tokio = { version = "^1.40", features = ["macros"] }

classfile = { path = "classfile" }
java_class_proto = { path = "java_class_proto" }
java_constants = { path = "java_constants" }
java_runtime = { path = "java_runtime" }
jvm = { path = "jvm" }
jvm_rust = { path = "jvm_rust" }

[package]
name = "rust_java"
version.workspace = true
edition.workspace = true
license.workspace = true

[[bin]]
name = "rust_java"

[dependencies]
async-trait = { workspace = true }
bytemuck = { workspace = true }

clap = { version = "^4.5", features = ["derive"] }

jvm = { workspace = true }
jvm_rust = { workspace = true }
java_class_proto = { workspace = true }
java_runtime = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["rt-multi-thread"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { workspace = true, features = ["rt"] }
